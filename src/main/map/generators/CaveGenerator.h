/**
 * The CaveGenerator creates a random cave.
 *
 * The cave is generated by first starting with the results of WallsGenerator,
 * then uses a modified "drunkard's walk" algorithm to carve out the cave; the
 * algorithm is modified such that the walk will never move beyond the solid
 * border.
 *
 * @version 1.0
 * @author Travis Veazey
 */
#ifndef CAVEGENERATOR_H_
#define CAVEGENERATOR_H_

#include <stdint.h>
#include "map/Tile.h"
#include "map/generators/Generator.h"

class CaveGenerator : public Generator
{
	public:
		/**
		 * Constructor.
		 *
		 * @param cave_ratio Ratio of floor tiles to wall tiles.
		 */
		CaveGenerator(float cave_ratio = 0.30);

		/**
		 * Generate a width x height cave map.
		 *
		 * @see Generator::generateMap
		 * @param width
		 * @param height
		 * @param tiles
		 */
		void generateMap(uint32_t width, uint32_t height, Tile** tiles);

	private:
		/**
		 * Ratio of floor tiles to wall tiles.
		 *
		 * This ratio defines how many floor tiles are carved out to form the
		 * cave, relative to the number of wall tiles.
		 */
		float _cave_ratio;
};

#endif
